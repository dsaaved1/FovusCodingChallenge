{"ast":null,"code":"var _jsxFileName = \"/Users/diegosaavedra/Desktop/FovusCodingChallenge/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_IMAGE_SIZE = 1000000;\nconst API_ENDPOINT = 'https://g7k976a75d.execute-api.us-east-1.amazonaws.com/uploads';\nconst API_SAVE_ENDPOINT = 'https://g7k976a75d.execute-api.us-east-1.amazonaws.com/save';\nfunction App() {\n  _s();\n  const [image, setImage] = useState('');\n  const [uploadURL, setUploadURL] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const onFileChange = e => {\n    let files = e.target.files || e.dataTransfer.files;\n    if (!files.length) return;\n    createImage(files[0]);\n  };\n  const createImage = file => {\n    let reader = new FileReader();\n    reader.onload = e => {\n      if (!e.target.result.includes('data:image/jpeg')) {\n        return alert('Wrong file type - JPG only.');\n      }\n      if (e.target.result.length > MAX_IMAGE_SIZE) {\n        return alert('Image is too large.');\n      }\n      setImage(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  const removeImage = () => {\n    setImage('');\n  };\n  const uploadImage = async () => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: API_ENDPOINT\n      });\n      const Key = JSON.parse(response.data).Key;\n      const bucketName = process.env.REACT_APP_BUCKET_NAME;\n      let binary = atob(image.split(',')[1]);\n      let array = [];\n      for (let i = 0; i < binary.length; i++) {\n        array.push(binary.charCodeAt(i));\n      }\n      let blobData = new Blob([new Uint8Array(array)], {\n        type: 'image/jpeg'\n      });\n      await fetch(response.uploadURL, {\n        method: 'PUT',\n        body: blobData\n      });\n      setUploadURL(response.uploadURL.split('?')[0]);\n\n      // //Triggers API gateway: Send the input text and S3 path to the API Gateway\n      await axios.post(API_SAVE_ENDPOINT, {\n        input_text: textInput,\n        input_file_path: s3Path\n      });\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Error uploading image. Please try again.');\n    }\n  };\n  const resetForm = () => {\n    setImage('');\n    setUploadURL('');\n    setTextInput('');\n  };\n  const canSubmit = textInput && image;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"S3 Uploader Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), !uploadURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Text input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: textInput,\n          onChange: e => setTextInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"File input:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onFileChange,\n          accept: \"image/jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          className: \"preview-image\",\n          alt: \"preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }, this), image && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeImage,\n          className: \"remove-button\",\n          children: \"Remove File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadImage,\n        disabled: !canSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Success! File uploaded to bucket.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        children: \"Upload another file and text input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RcOr68mPnntX/K+zKQB/sk8TZEU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MAX_IMAGE_SIZE","API_ENDPOINT","API_SAVE_ENDPOINT","App","_s","image","setImage","uploadURL","setUploadURL","textInput","setTextInput","onFileChange","e","files","target","dataTransfer","length","createImage","file","reader","FileReader","onload","result","includes","alert","readAsDataURL","removeImage","uploadImage","response","method","url","Key","JSON","parse","data","bucketName","process","env","REACT_APP_BUCKET_NAME","binary","atob","split","array","i","push","charCodeAt","blobData","Blob","Uint8Array","type","fetch","body","post","input_text","input_file_path","s3Path","error","console","resetForm","canSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","accept","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/diegosaavedra/Desktop/FovusCodingChallenge/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst MAX_IMAGE_SIZE = 1000000;\nconst API_ENDPOINT = 'https://g7k976a75d.execute-api.us-east-1.amazonaws.com/uploads';\nconst API_SAVE_ENDPOINT = 'https://g7k976a75d.execute-api.us-east-1.amazonaws.com/save'\n\nfunction App() {\n  const [image, setImage] = useState('');\n  const [uploadURL, setUploadURL] = useState('');\n  const [textInput, setTextInput] = useState('');\n\n  const onFileChange = (e) => {\n    let files = e.target.files || e.dataTransfer.files;\n    if (!files.length) return;\n    createImage(files[0]);\n  };\n\n  const createImage = (file) => {\n    let reader = new FileReader();\n    reader.onload = (e) => {\n      if (!e.target.result.includes('data:image/jpeg')) {\n        return alert('Wrong file type - JPG only.');\n      }\n      if (e.target.result.length > MAX_IMAGE_SIZE) {\n        return alert('Image is too large.');\n      }\n      setImage(e.target.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const removeImage = () => {\n    setImage('');\n  };\n\n  const uploadImage = async () => {\n    try {\n      const response =  await axios({\n        method: 'GET',\n        url: API_ENDPOINT\n      });\n\n      const Key = JSON.parse(response.data).Key;\n      const bucketName = process.env.REACT_APP_BUCKET_NAME;\n      \n      let binary = atob(image.split(',')[1]);\n      let array = [];\n      for (let i = 0; i < binary.length; i++) {\n        array.push(binary.charCodeAt(i));\n      }\n      let blobData = new Blob([new Uint8Array(array)], { type: 'image/jpeg' });\n      \n      await fetch(response.uploadURL, {\n        method: 'PUT',\n        body: blobData\n      });\n      setUploadURL(response.uploadURL.split('?')[0]);\n\n      // //Triggers API gateway: Send the input text and S3 path to the API Gateway\n      await axios.post(API_SAVE_ENDPOINT, {\n        input_text: textInput,\n        input_file_path: s3Path\n      });\n\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Error uploading image. Please try again.');\n    }\n  };\n\n  const resetForm = () => {\n    setImage('');\n    setUploadURL('');\n    setTextInput('');\n  };\n\n  const canSubmit = textInput && image;\n\n  return (\n    <div className=\"App\">\n      <h1>S3 Uploader Test</h1>\n      {!uploadURL ? (\n        <>\n          <div className=\"input-group\">\n            <label>Text input:</label>\n            <input type=\"text\" value={textInput} onChange={(e) => setTextInput(e.target.value)} />\n          </div>\n          <div className=\"input-group\">\n            <label>File input:</label>\n            <input type=\"file\" onChange={onFileChange} accept=\"image/jpeg\" />\n            {image && <img src={image} className=\"preview-image\" alt=\"preview\" />}\n            {image && <button onClick={removeImage} className=\"remove-button\">Remove File</button>}\n          </div>\n          <button onClick={uploadImage} disabled={!canSubmit}>Submit</button>\n        </>\n      ) : (\n        <>\n          <h2>Success! File uploaded to bucket.</h2>\n          <button onClick={resetForm}>Upload another file and text input</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}